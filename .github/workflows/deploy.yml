name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Create static build
        run: |
          # Create a static directory structure for GitHub Pages
          mkdir -p _site
          mkdir -p _site/static/css
          mkdir -p _site/static/js
          
          # Copy static files
          cp -r static/* _site/static/
          
          # Create static version of the HTML with modifications for GitHub Pages
          python3 -c "
          import os
          
          # Read the original template
          with open('templates/index.html', 'r') as f:
              content = f.read()
          
          # Add deployment notice and disable functionality
          deployment_notice = '''
              <div style='background: #d1ecf1; border: 1px solid #bee5eb; border-radius: 5px; padding: 15px; margin: 20px 0; color: #0c5460;'>
                  <h3>ðŸ“¢ GitHub Pages Deployment</h3>
                  <p>This is the static version of the Network Configuration Generator. The full Flask application with live processing is available at:</p>
                  <ul>
                      <li><strong>Local Development:</strong> Clone the repository and run <code>python app.py</code></li>
                      <li><strong>Repository:</strong> <a href=\"https://github.com/harshitsharma-dev/testIT\" target=\"_blank\">https://github.com/harshitsharma-dev/testIT</a></li>
                  </ul>
              </div>
          '''
          
          # Insert after header
          content = content.replace('<main>', deployment_notice + '<main>')
          
          # Disable generate button and add note
          content = content.replace('ðŸš€ Generate Configuration', 'ðŸš€ Generate Configuration (Requires Local Setup)')
          content = content.replace('id=\"generate-btn\" class=\"btn btn-primary\"', 'id=\"generate-btn\" class=\"btn btn-primary\" disabled')
          
          # Add API note
          api_note = '''
                          <div style='background: #fff3cd; border: 1px solid #ffeaa7; border-radius: 5px; padding: 15px; margin: 20px 0; color: #856404;'>
                              <h4>ðŸ”§ To Use Full Functionality:</h4>
                              <ol>
                                  <li>Clone the repository: <code>git clone https://github.com/harshitsharma-dev/testIT.git</code></li>
                                  <li>Install dependencies: <code>pip install -r requirements.txt</code></li>
                                  <li>Run the Flask app: <code>python app.py</code></li>
                                  <li>Open <code>http://localhost:5000</code> in your browser</li>
                              </ol>
                          </div>
          '''
          
          content = content.replace('</div>\n                      </section>', '</div>' + api_note + '\n                      </section>')
          
          # Write to _site
          with open('_site/index.html', 'w') as f:
              f.write(content)
          "

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '_site'

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
